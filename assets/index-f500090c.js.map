{"version":3,"file":"index-f500090c.js","sources":["../../src/components/ui/Typography/index.tsx"],"sourcesContent":["import { HTMLAttributes, ReactNode } from 'react';\n\nimport classNames from 'classnames';\nimport './index.scss';\n\n// ---------------------------------------------------------------------- //\n\ntype HeadSize = 'xl' | 'lg' | 'base' | 'sm' | 'xs' | 'option';\ntype BodySize = 'lg' | 'base' | 'sm' | 'xs' | 'option';\n\nexport type TypographyProps = {\n  variant?: 'head' | 'body' | 'caption';\n  size?: HeadSize | BodySize;\n  align?: 'left' | 'center' | 'right';\n  weight?: 400 | 500 | 700;\n  color?: string;\n  isParagraph?: boolean;\n  children: ReactNode;\n} & HTMLAttributes<HTMLBaseElement>;\n\nconst HEAD_SIZE_MAPS: Record<HeadSize, string> = {\n  xl: 'text-head-xl',\n  lg: 'text-head-lg',\n  base: 'text-head-base',\n  sm: 'text-head-sm',\n  xs: 'text-head-xs',\n  option: 'text-head-option'\n};\n\nconst BODY_SIZE_MAPS: Record<BodySize, string> = {\n  lg: 'text-body-lg',\n  base: 'text-body-base',\n  sm: 'text-body-sm',\n  xs: 'text-body-xs',\n  option: 'text-body-option'\n};\n\nconst ALIGN_MAPS = {\n  left: 'text--left',\n  center: 'text--center',\n  right: 'text--right'\n};\n\nconst WEIGHT_MAPS = {\n  400: 'font-400',\n  500: 'font-500',\n  700: 'font-700'\n};\n\nconst windowsStyle = window.navigator.userAgent.includes('Win') ? 'rotate-[0.03deg]' : undefined;\n\nconst Typography = ({\n  variant = 'body',\n  size = 'base',\n  align = 'left',\n  weight,\n  color,\n  isParagraph = false,\n  children,\n  className\n}: TypographyProps) => {\n  return (\n    <>\n      {variant === 'head' && (\n        <strong\n          className={classNames(\n            HEAD_SIZE_MAPS[size as HeadSize],\n            ALIGN_MAPS[align],\n            WEIGHT_MAPS[weight || 700],\n            color,\n            windowsStyle,\n            className\n          )}\n        >\n          {children}\n        </strong>\n      )}\n      {variant === 'body' && (\n        <span\n          className={classNames(\n            BODY_SIZE_MAPS[size as BodySize],\n            ALIGN_MAPS[align],\n            WEIGHT_MAPS[weight || 400],\n            'break-keep',\n            color,\n            windowsStyle,\n            { 'whitespace-pre-wrap break-keep': isParagraph },\n            className\n          )}\n        >\n          {children}\n        </span>\n      )}\n      {variant === 'caption' && (\n        <span\n          className={classNames(\n            'text-caption',\n            ALIGN_MAPS[align],\n            WEIGHT_MAPS[weight || 400],\n            'break-keep',\n            color,\n            windowsStyle,\n            { 'whitespace-pre-wrap break-keep': isParagraph },\n            className\n          )}\n        >\n          {children}\n        </span>\n      )}\n    </>\n  );\n};\n\nexport default Typography;\n"],"names":["HEAD_SIZE_MAPS","BODY_SIZE_MAPS","ALIGN_MAPS","WEIGHT_MAPS","windowsStyle","Typography","variant","size","align","weight","color","isParagraph","children","className","jsxs","Fragment","jsx","classNames","Typography$1"],"mappings":"sFAoBA,MAAAA,EAAA,CAAiD,GAAA,eAC3C,GAAA,eACA,KAAA,iBACE,GAAA,eACF,GAAA,eACA,OAAA,kBAEN,EAEAC,EAAA,CAAiD,GAAA,eAC3C,KAAA,iBACE,GAAA,eACF,GAAA,eACA,OAAA,kBAEN,EAEAC,EAAA,CAAmB,KAAA,aACX,OAAA,eACE,MAAA,aAEV,EAEAC,EAAA,CAAoB,IAAA,WACb,IAAA,WACA,IAAA,UAEP,EAEAC,EAAA,OAAA,UAAA,UAAA,SAAA,KAAA,EAAA,mBAAA,OAEAC,EAAA,CAAA,CAAoB,QAAAC,EAAA,OACR,KAAAC,EAAA,OACH,MAAAC,EAAA,OACC,OAAAC,EACR,MAAAC,EACA,YAAAC,EAAA,GACc,SAAAC,EACd,UAAAC,CAEF,IACEC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEKT,IAAA,QAAAU,EAAA,IACC,SAAC,CAAA,UAAAC,EACYjB,EAAAO,CAAA,EACsBL,EAAAM,CAAA,EACfL,EAAAM,GAAA,GAAA,EACSC,EACzBN,EACAS,CACA,EACF,SAAAD,CAEC,CAAA,EACHN,IAAA,QAAAU,EAAA,IAGA,OAAC,CAAA,UAAAC,EACYhB,EAAAM,CAAA,EACsBL,EAAAM,CAAA,EACfL,EAAAM,GAAA,GAAA,EACS,aACzBC,EACAN,EACA,CAAA,iCAAAO,CAAA,EACgDE,CAChD,EACF,SAAAD,CAEC,CAAA,EACHN,IAAA,WAAAU,EAAA,IAGA,OAAC,CAAA,UAAAC,EACY,eACTf,EAAAM,CAAA,EACgBL,EAAAM,GAAA,GAAA,EACS,aACzBC,EACAN,EACA,CAAA,iCAAAO,CAAA,EACgDE,CAChD,EACF,SAAAD,CAEC,CAAA,CACH,CAAA,CAAA,EAMRM,EAAAb"}