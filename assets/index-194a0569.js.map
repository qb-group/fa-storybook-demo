{"version":3,"file":"index-194a0569.js","sources":["../../src/components/ui/Picker/index.tsx"],"sourcesContent":["import { ReactNode, useEffect, useState } from 'react';\n\nimport Typography from 'components/ui/Typography';\n\nimport classNames from 'classnames';\n\ntype Item = {\n  key: number;\n  label: ReactNode;\n  value: string;\n};\n\nexport interface PickerProps {\n  variant?: 'button' | 'example';\n  shouldMultiCheck?: boolean;\n  list: Item[];\n  initialSelect?: number[];\n  onUpdateSelected?: (selected: number[]) => void;\n}\n\nconst VARIANT_MAPS = {\n  button: '',\n  example: ''\n};\n\nconst Picker = ({\n  variant = 'button',\n  shouldMultiCheck = false,\n  list,\n  initialSelect,\n  onUpdateSelected\n}: PickerProps) => {\n  const [select, setSelect] = useState<number[]>(initialSelect ?? []);\n\n  const onHandleSelect = (key: number) => {\n    if (shouldMultiCheck) {\n      setSelect((prev) => {\n        if (prev.includes(key)) {\n          return prev.filter((item) => item !== key);\n        }\n        return [...prev, key];\n      });\n    } else {\n      setSelect([key]);\n    }\n  };\n\n  useEffect(() => {\n    if (onUpdateSelected) {\n      onUpdateSelected(select);\n    }\n  }, [onUpdateSelected, select]);\n\n  return (\n    <ul className=\"flex flex-col items-center grow gap-5\">\n      {list?.map(({ key, label }) => (\n        <li key={key} className=\"flex w-full\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'inline-flex items-center justify-center grow min-h-[4rem] py-2 px-4 rounded-button-xl focus:[:not(:focus-visible):outline-none] focus-visible:outline-1 focus-visible:-outline-offset-1 focus-visible:outline-primary-500',\n              VARIANT_MAPS[variant],\n              select.includes(key) ? 'bg-gray-800' : 'bg-gray-300'\n            )}\n            onClick={() => onHandleSelect(key)}\n          >\n            <Typography\n              align=\"center\"\n              color={select.includes(key) ? 'text-white' : 'text-gray-700'}\n            >\n              {label}\n            </Typography>\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Picker;\n"],"names":["VARIANT_MAPS","Picker","variant","shouldMultiCheck","list","initialSelect","onUpdateSelected","select","setSelect","useState","onHandleSelect","key","prev","item","useEffect","jsx","label","classNames","Typography","Picker$1"],"mappings":"sKAoBA,MAAAA,EAAA,CAAqB,OAAA,GACX,QAAA,EAEV,EAEAC,EAAA,CAAA,CAAgB,QAAAC,EAAA,SACJ,iBAAAC,EAAA,GACS,KAAAC,EACnB,cAAAC,EACA,iBAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAAA,SAAAJ,GAAA,CAAA,CAAA,EAEAK,EAAAC,GAAA,CAEIH,EADFL,EACES,GACEA,EAAA,SAAAD,CAAA,EACEC,EAAA,OAAAC,GAAAA,IAAAF,CAAA,EAEF,CAAA,GAAAC,EAAAD,CAAA,EAGF,CAAAA,CAAA,CAHsB,CAIxB,EAGFG,OAAAA,EAAAA,UAAA,IAAA,CACER,GACEA,EAAAC,CAAA,CACF,EAAA,CAAAD,EAAAC,CAAA,CAAA,EAGFQ,EAAAA,IAAA,KAAA,CAAA,UAAA,wCAAA,SAAAX,GAAA,YAAAA,EAAA,IAAA,CAAA,CAAA,IAAAO,EAAA,MAAAK,CAAA,IAAAD,MAAA,KAAA,CAAA,UAAA,cAAA,SAAAA,EAAA,IAIQ,SAAC,CAAA,KAAA,SACM,UAAAE,EACM,4NACTjB,EAAAE,CAAA,EACoBK,EAAA,SAAAI,CAAA,EAAA,cAAA,aACmB,EACzC,QAAA,IAAAD,EAAAC,CAAA,EACiC,SAAAI,EAAA,IAEjCG,EAAC,CAAA,MAAA,SACO,MAAAX,EAAA,SAAAI,CAAA,EAAA,aAAA,gBACuC,SAAAK,CAE5C,CAAA,CACH,CAAA,GAAAL,CAAA,EAAA,CAAA,CAMZ,EAEAQ,EAAAlB"}