{"version":3,"file":"formatters-2037c84a.js","sources":["../../src/utils/formatters.ts"],"sourcesContent":["import dayjs, { Dayjs } from 'dayjs';\n\n// ----------------------------------------------------------------------\n\nexport function formatToKoreanAmount(amt: string | number) {\n  const transformedValue = typeof amt === 'string' ? Number(amt.replace(/,/g, '')) : amt;\n  const isNegative = transformedValue < 0;\n\n  const absoluteValue = Math.abs(transformedValue);\n\n  const hundredMillion = 100000000;\n  const tenThousand = 10000;\n  const thousand = 1000;\n  const hundred = 100;\n  const ten = 10;\n\n  const num1 = Math.floor(absoluteValue / hundredMillion);\n  const num2 = Math.floor((absoluteValue % hundredMillion) / tenThousand);\n  const num3 = Math.floor((absoluteValue % tenThousand) / thousand);\n  const num4 = Math.floor((absoluteValue % thousand) / hundred);\n  const num5 = Math.floor((absoluteValue % hundred) / ten);\n  const num6 = Math.floor(absoluteValue % ten);\n\n  if (transformedValue === 0 || transformedValue === undefined) return '';\n\n  const formattedAmount =\n    (num1 ? num1 + '억 ' : '') +\n    (num2 ? num2 + '만 ' : '') +\n    (num3 ? num3 + '천 ' : '') +\n    (num4 ? num4 + '백 ' : '') +\n    (num5 ? num5 + '십 ' : '') +\n    (num6 ? num6 : '') +\n    '원';\n\n  return isNegative ? '-' + formattedAmount : formattedAmount;\n}\n\nexport function getAge(date: string | Date | Dayjs) {\n  const today = dayjs();\n  const birthDate = dayjs(date);\n\n  const age = today.year() - birthDate.year();\n  const month = today.month() - birthDate.month();\n  if (month < 0 || (month === 0 && today.date() < birthDate.date())) {\n    return age - 1;\n  } else {\n    return age;\n  }\n}\n\nexport const dateFormatter = (value: string): string => {\n  if (value === '') {\n    return '';\n  }\n\n  const year = value.substring(0, 4);\n  const month = value.substring(4, 6);\n  const day = value.substring(6, 8);\n\n  let formattedDate = year;\n  if (month) {\n    formattedDate += `-${month}`;\n  }\n  if (day) {\n    formattedDate += `-${day}`;\n  }\n\n  return formattedDate;\n};\n\nexport const dateToTodayFormatter = (value: string): string => {\n  if (value === '') {\n    return '';\n  }\n\n  const year = value.substring(0, 4);\n  let month = value.substring(4, 6);\n  let day = value.substring(6, 8);\n\n  if (parseInt(month.substring(0, 1)) > 1) {\n    month = `0${month}`;\n  } else if (parseInt(month) === 0 || parseInt(month) > 12) {\n    month = month.substring(0, 1);\n  }\n\n  if (parseInt(day.substring(0, 1)) > 3) {\n    day = `0${day}`;\n  } else if (parseInt(day) === 0 || parseInt(day) > 31) {\n    day = day.substring(0, 1);\n  }\n\n  const currentYear = new Date().getFullYear().toString();\n\n  if (parseInt(year.substring(0, 1)) > parseInt(currentYear.substring(0, 1))) {\n    return '';\n  } else if (parseInt(year.substring(0, 2)) > parseInt(currentYear.substring(0, 2))) {\n    return year.substring(0, 1);\n  } else if (parseInt(year.substring(0, 3)) > parseInt(currentYear.substring(0, 3))) {\n    return year.substring(0, 2);\n  } else if (parseInt(year) > parseInt(currentYear)) {\n    return year.substring(0, 3);\n  }\n\n  let formattedDate = year;\n  if (month) {\n    formattedDate += `-${month}`;\n  }\n  if (day) {\n    formattedDate += `-${day}`;\n  }\n\n  return formattedDate;\n};\n\nexport const telFormatter = (value: string): string => {\n  if (value === '') {\n    return '';\n  }\n\n  const firstValue = value.substring(0, 3);\n  const secondValue = value.substring(3, 7);\n  const lastValue = value.substring(7, 11);\n\n  let formattedTel = firstValue;\n  if (secondValue) {\n    formattedTel += `-${secondValue}`;\n  }\n  if (lastValue) {\n    formattedTel += `-${lastValue}`;\n  }\n\n  return formattedTel;\n};\n\nexport const currencyFormatter = (value: string | number) => {\n  return value ? Intl.NumberFormat('ko-KR').format(Number(value)) : '';\n};\n"],"names":["formatToKoreanAmount","amt","transformedValue","isNegative","absoluteValue","hundredMillion","tenThousand","thousand","hundred","ten","num1","num2","num3","num4","num5","num6","formattedAmount","dateFormatter","value","year","month","day","formattedDate","dateToTodayFormatter","currentYear","telFormatter","firstValue","secondValue","lastValue","formattedTel","currencyFormatter"],"mappings":"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"}