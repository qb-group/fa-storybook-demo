{"version":3,"file":"Modal.stories-486d1f84.js","sources":["../../src/components/ui/Modal/index.tsx"],"sourcesContent":["import { PropsWithChildren, ReactNode, useId } from 'react';\nimport ReactModal from 'react-modal';\n\nimport Footer from 'components/layout/Footer';\nimport Typography from 'components/ui/Typography';\nimport Icon from 'components/ui/Icon';\nimport ButtonGroup from 'components/ui/ButtonGroup';\nimport Button from 'components/ui/Button';\n\nimport classNames from 'classnames';\nimport './index.scss';\n\nexport type Variant = 'inline' | 'full';\n\nexport interface ModalProps extends PropsWithChildren {\n  variant?: Variant;\n  contentLabel?: string;\n  isOpen: boolean;\n  onRequestClose?: () => void;\n  shouldCloseOnOverlayClick?: boolean;\n  onAfterOpen?: () => void;\n  onAfterClose?: () => void;\n}\n\nconst CONTAINER_CLASS_NAME_MAPS = {\n  inline:\n    'flex flex-col relative overflow-hidden min-w-[25rem] w-fit max-h-[42.5rem] my-6 mx-auto bg-white rounded-card-lg outline-none tablet:max-w-[60rem]',\n  full: 'flex flex-col relative w-full h-full bg-white outline-none'\n};\n\nconst CONTENT_CLASS_NAME_MAPS = {\n  inline: 'grow flex flex-col',\n  full: 'grow flex flex-col w-full h-full'\n};\n\nexport interface ModalHeaderProps {\n  onClose?: () => void;\n  variant?: Variant;\n  title?: ReactNode;\n  align?: 'left' | 'center' | 'right';\n  canBeCustom?: boolean;\n  hasShadow?: boolean;\n}\n\nconst TITLE_ALIGN_MAPS = {\n  left: 'justify-start',\n  center: 'justify-center',\n  right: 'justify-end'\n};\n\nexport const ModalHeader = ({\n  onClose,\n  title,\n  align = 'left',\n  canBeCustom = false,\n  hasShadow = false\n}: ModalHeaderProps) => {\n  return (\n    <div\n      className={classNames(\n        'flex items-center shrink-0 z-[999] bg-white',\n        hasShadow\n          ? 'h-16 pr-2 pl-[1.875rem] border-b rounded-card-md shadow-[0_0.25rem_0.5rem_0_#00000024]'\n          : 'py-5 pl-6',\n        {\n          'pr-[3.75rem]': onClose && !hasShadow\n        },\n        {\n          'pr-6': !onClose && !hasShadow\n        },\n        { 'pl-[3.75rem]': onClose && align === 'center' },\n        TITLE_ALIGN_MAPS[align]\n      )}\n    >\n      {title &&\n        (canBeCustom ? (\n          <>{title}</>\n        ) : hasShadow ? (\n          <div className=\"inline-flex px-4\">\n            <Typography variant=\"head\" color=\"text-gray-800\">\n              {title}\n            </Typography>\n          </div>\n        ) : (\n          <Typography size=\"lg\" weight={700} color=\"text-gray-800\">\n            {title}\n          </Typography>\n        ))}\n\n      {onClose && (\n        <div\n          className={classNames(\n            'inline-flex items-center justify-center shrink-0',\n            hasShadow ? 'ml-auto' : 'absolute top-2 right-1'\n          )}\n        >\n          <Icon\n            name=\"icon-basic-close\"\n            size={hasShadow ? 'text-28' : 'text-24'}\n            color=\"text-gray-600\"\n            onClick={onClose}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport interface ModalBodyProps extends PropsWithChildren {\n  hasScrollbar?: boolean;\n  isPaper?: boolean;\n}\n\nexport const ModalBody = ({ hasScrollbar = false, isPaper = false, children }: ModalBodyProps) => {\n  return (\n    <div\n      className={classNames(\n        'flex flex-col grow pb-6 px-6 scrollbar-custom',\n        hasScrollbar ? 'overflow-y-scroll' : 'overflow-y-auto',\n        { 'scrollbar-custom--paper': isPaper }\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport interface ModalFooterProps {\n  secondaryLabel?: string;\n  onSecondaryClick?: () => void;\n  primaryLabel?: string;\n  onPrimaryClick?: () => void;\n  useCustomElement?: ReactNode;\n}\n\nexport const ModalFooter = ({\n  secondaryLabel = '취소',\n  onSecondaryClick,\n  primaryLabel = '확인',\n  onPrimaryClick,\n  useCustomElement\n}: ModalFooterProps) => {\n  return (\n    <div className={classNames('shrink-0 flex pb-6 px-6')}>\n      <ButtonGroup isFullWidth>\n        {useCustomElement ? (\n          useCustomElement\n        ) : (\n          <>\n            {secondaryLabel && onSecondaryClick && (\n              <Button flex={1} character=\"modal\" color=\"secondary\" onClick={onSecondaryClick}>\n                {secondaryLabel}\n              </Button>\n            )}\n            {primaryLabel && onPrimaryClick && (\n              <Button flex={1} character=\"modal\" onClick={onPrimaryClick}>\n                {primaryLabel}\n              </Button>\n            )}\n          </>\n        )}\n      </ButtonGroup>\n    </div>\n  );\n};\n\nconst Modal = ({\n  variant = 'inline',\n  contentLabel,\n  isOpen = false,\n  onRequestClose,\n  shouldCloseOnOverlayClick = false,\n  onAfterOpen,\n  onAfterClose,\n  children\n}: ModalProps) => {\n  const id = useId();\n\n  const RequestClose = () => {\n    if (variant !== 'full' && onRequestClose) {\n      onRequestClose();\n    }\n  };\n\n  return (\n    <ReactModal\n      id={`${variant}-modal-${id}`}\n      role={`${variant}-modal`}\n      isOpen={isOpen}\n      contentLabel={contentLabel || '어떤 레이블인지 설명해주세요'}\n      portalClassName=\"z-auto\"\n      ariaHideApp={false}\n      onAfterOpen={onAfterOpen}\n      onAfterClose={onAfterClose}\n      onRequestClose={RequestClose}\n      overlayClassName=\"flex items-center justify-center fixed w-full h-full inset-0 z-[999] bg-black/50\"\n      contentElement={(props) => (\n        <div\n          className={classNames(\n            'content-ele flex flex-col bg-white',\n            CONTENT_CLASS_NAME_MAPS[variant]\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      )}\n      shouldCloseOnOverlayClick={shouldCloseOnOverlayClick && variant !== 'full'}\n      className={classNames('qb-modal__content', CONTAINER_CLASS_NAME_MAPS[variant])}\n    />\n  );\n};\n\nModal.Header = ModalHeader;\nModal.Body = ModalBody;\nModal.Footer = ModalFooter;\nModal.Copyright = Footer;\n\nexport default Modal;\n"],"names":["CONTAINER_CLASS_NAME_MAPS","CONTENT_CLASS_NAME_MAPS","TITLE_ALIGN_MAPS","ModalHeader","onClose","title","align","canBeCustom","hasShadow","jsxs","classNames","jsx","Fragment","Typography","Icon","ModalBody","hasScrollbar","isPaper","children","ModalFooter","secondaryLabel","onSecondaryClick","primaryLabel","onPrimaryClick","useCustomElement","ButtonGroup","Button","Modal","variant","contentLabel","isOpen","onRequestClose","shouldCloseOnOverlayClick","onAfterOpen","onAfterClose","id","useId","RequestClose","ReactModal","props","Footer","Modal$1"],"mappings":"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"}