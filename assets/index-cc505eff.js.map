{"version":3,"file":"index-cc505eff.js","sources":["../../src/components/ui/Tooltip/index.tsx"],"sourcesContent":["import { PropsWithChildren, ReactNode, useRef, useState } from 'react';\n\nimport Typography from 'components/ui/Typography';\n\nimport classNames from 'classnames';\n\ninterface TooltipProps extends PropsWithChildren {\n  id: string;\n  content?: ReactNode;\n  hasArrow?: boolean;\n}\n\ninterface TooltipBodyProps extends PropsWithChildren {\n  variant?: 'body' | 'caption';\n  size?: 'xs' | 'sm' | 'base' | 'lg';\n  weight?: 400 | 500;\n  color?: string;\n}\n\nconst TooltipTitle = ({ children }: PropsWithChildren) => {\n  return (\n    <Typography variant=\"caption\" weight={500} color=\"text-gray-800\">\n      {children}\n    </Typography>\n  );\n};\n\nconst TooltipBody = ({\n  variant = 'caption',\n  size = 'base',\n  weight = 400,\n  color = 'text-gray-700',\n  children\n}: TooltipBodyProps) => {\n  return (\n    <Typography variant={variant} size={size} weight={weight} isParagraph color={color}>\n      {children}\n    </Typography>\n  );\n};\n\nconst Tooltip = ({ id, content, hasArrow = true, children }: TooltipProps) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n\n  const handleMouseEnter = () => {\n    setShowTooltip(true);\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    <div\n      className=\"flex relative cursor-help\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {children}\n      {showTooltip && (\n        <>\n          <div\n            ref={tooltipRef}\n            id={id}\n            className={classNames(\n              'flex flex-col gap-y-1 absolute -bottom-[0.875rem] left-1/2 z-[99] min-w-[20rem] w-fit py-2 px-3 bg-white rounded-card-md shadow-tooltip transform -translate-x-1/2 translate-y-full'\n            )}\n          >\n            {content}\n            {hasArrow && <div className=\"qb-tooltip-arrow\" />}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nTooltip.Title = TooltipTitle;\nTooltip.Body = TooltipBody;\n\nexport default Tooltip;\n"],"names":["TooltipTitle","children","jsx","Typography","TooltipBody","variant","size","weight","color","Tooltip","id","content","hasArrow","showTooltip","setShowTooltip","useState","tooltipRef","useRef","handleMouseEnter","handleMouseLeave","jsxs","Fragment","classNames","Tooltip$1"],"mappings":"sKAmBA,MAAAA,EAAA,CAAA,CAAA,SAAAC,KACEC,MAAAC,EAAA,CAAA,QAAA,UAAA,OAAA,IAAA,MAAA,gBAAA,SAAAF,CAAA,CAAA,EAOFG,EAAA,CAAA,CAAqB,QAAAC,EAAA,UACT,KAAAC,EAAA,OACH,OAAAC,EAAA,IACE,MAAAC,EAAA,gBACD,SAAAP,CAEV,IACEC,MAAAC,EAAA,CAAA,QAAAE,EAAA,KAAAC,EAAA,OAAAC,EAAA,YAAA,GAAA,MAAAC,EAAA,SAAAP,CAAA,CAAA,EAOFQ,EAAA,CAAA,CAAA,GAAAC,EAAA,QAAAC,EAAA,SAAAC,EAAA,GAAA,SAAAX,KAAA,CACE,KAAA,CAAAY,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAAC,SAAA,IAAA,EAEAC,EAAA,IAAA,CACEJ,EAAA,EAAA,CAAmB,EAGrBK,EAAA,IAAA,CACEL,EAAA,EAAA,CAAoB,EAGtB,OAAAM,EAAA,KACE,MAAC,CAAA,UAAA,4BACW,aAAAF,EACI,aAAAC,EACA,SAAA,CAEblB,EAAAY,GAAAX,EAAA,IAAAmB,WAAA,CAAA,SAAAD,EAAA,KAGG,MAAC,CAAA,IAAAJ,EACM,GAAAN,EACL,UAAAY,EACW,qLACT,EACF,SAAA,CAECX,EAAAC,GAAAV,EAAAA,IAAA,MAAA,CAAA,UAAA,kBAAA,CAAA,CAC8C,CAAA,CAAA,EAAA,CAEnD,CAAA,CAAA,CAIR,EAEAO,EAAA,MAAAT,EACAS,EAAA,KAAAL,EAEA,MAAAmB,EAAAd"}